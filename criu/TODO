1. 【待完成，优先级最高】优化PF链路使其成为最短路径，提升PF性能。优化PF与其他链路的协同效果，保证页面能快速传输到目标机器，优化传输的性能下降

2.  【待完成，优先级高】根据log寻找容器迁移关键路径上的长停机时间占比的函数功能，将其功能通过异步、placeholder等方式进行停机时间隐藏，
    比如先【优化restore中的mnt操作，使其在placeholder中来降低downtime。】这个在停机时间里面的占比很大一部分

3. 【待完成，优先级一般】目前使用硬编码定义了进程最大的VMA数量200，有些数组的大小就是按照这个大小来设置的。
    我观察到gpt-2容器生成的vma大小数量很大，应该是超过200个了。这里需要调整

4. 【待完成，优先级偏低】目前使用的是单进程来跑实验（所有容器只能有一个进程），对多进程的支持仍然有bug。

5. 【待完成，优先级一般】目前multiple uffd是使用同步的方式来进行ioctl，因此最大的写带宽还是锁死在了1GB/s。
    因此需要实现一个异步的ioctl队列，PT,PF,PF,TS等路径都是将数据传输到对应的队列中。ioctl会异步检查队列并将数据写入到目标进程中。


3.19: Done
1. 高挡位好多垃圾数据(done)
2. socre list数据少
3. TS应该先小块传输很热的数据
4. Read hot num的值为什么会随着读取次数变多减少。按理应该变多(done)


3.21
1. 目前停机时间大约为100ms，但是在TS启动之后，TS就可以先最热的页面在停机时间中发送到page client中存储；TS的是否应该以小块先传输热页面？
2. ioctl_mul 多队列实现，提升UFFD向进程内写内存的能力。
3. 基于在pie内实现madvice来卸载dirty页面，从而实现pre-restore
4. Downtime 分支，降低mnt的停机时延

3.24
1. 提前TS
2. 多级队列
3. FT调通(done)


4.8
1. 目前最快的频率PF发送页面之间的间隔时间也大多大于3us，这个时间内uffd应该有充足时间写入。为什么会出现TS饿死
2. mul-uffd的实现